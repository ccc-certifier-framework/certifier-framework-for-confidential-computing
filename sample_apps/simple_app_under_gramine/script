#
# Helpful script to run example
# Edit the CERTIFIER_PROTOTYPE path and MR_ENCLAVE_HASH before running
#
# export GOROOT=/usr/local/go
# export PATH=$PATH:$GOROOT/bin
# export GO111MODULE=off
export GOPATH=$HOME
export CERTIFIER_PROTOTYPE=<src_path>
export GRAMINE_EXAMPLE_DIR=$CERTIFIER_PROTOTYPE/sample_apps/simple_app_under_gramine

# Create keys
mkdir -p $GRAMINE_EXAMPLE_DIR/provisioning
cd $GRAMINE_EXAMPLE_DIR/provisioning
$CERTIFIER_PROTOTYPE/utilities/cert_utility.exe --operation=generate-policy-key \
    --policy_key_output_file=policy_key_file.bin --policy_cert_output_file=policy_cert_file.bin

# Embed policy key and compile app
$CERTIFIER_PROTOTYPE/utilities/embed_policy_key.exe --input=policy_cert_file.bin --output=../policy_key.cc

# Build app and note MR_ENCLAVE_HASH to be filled below
cd $GRAMINE_EXAMPLE_DIR
make -f gramine_example_app.mak app RA_TYPE=dcap

# Obtain the measurement of the trusted application
cd $GRAMINE_EXAMPLE_DIR/provisioning
$CERTIFIER_PROTOTYPE/utilities/measurement_init.exe --out_file=gramine_app.measurement \
    --mrenclave=<MR_ENCLAVE_HASH>

# Construct platform key policy
$CERTIFIER_PROTOTYPE/utilities/make_unary_vse_clause.exe --cert-subject=sgx.cert.der \
        --verb="is-trusted-for-attestation" --output=ts1.bin
$CERTIFIER_PROTOTYPE/utilities/make_indirect_vse_clause.exe --key_subject=policy_key_file.bin \
        --verb="says" --clause=ts1.bin --output=vse_policy1.bin
$CERTIFIER_PROTOTYPE/utilities/make_signed_claim_from_vse_clause.exe \
        --vse_file=vse_policy1.bin --duration=9000 \
        --private_key_file=policy_key_file.bin --output=signed_claim_1.bin

# Construct the measurement policy
$CERTIFIER_PROTOTYPE/utilities/make_unary_vse_clause.exe --key_subject="" \
        --measurement_subject=gramine_app.measurement --verb="is-trusted" \
        --output=ts2.bin
$CERTIFIER_PROTOTYPE/utilities/make_indirect_vse_clause.exe --key_subject=policy_key_file.bin \
        --verb="says" --clause=ts2.bin --output=vse_policy2.bin
$CERTIFIER_PROTOTYPE/utilities/make_signed_claim_from_vse_clause.exe --vse_file=vse_policy2.bin \
        --duration=9000 --private_key_file=policy_key_file.bin --output=signed_claim_2.bin

# Package the policy for the certifier
$CERTIFIER_PROTOTYPE/utilities/package_claims.exe --input=signed_claim_1.bin,signed_claim_2.bin\
  --output=policy.bin

# Compile the protobuf
cd $CERTIFIER_PROTOTYPE
cd certifier_service/certprotos
protoc --go_opt=paths=source_relative --go_out=. --go_opt=M=certifier.proto ./certifier.proto
cd $CERTIFIER_PROTOTYPE/certifier_service/graminelib
make dummy
cd $CERTIFIER_PROTOTYPE/certifier_service/graminelib/
make

# Build simpleserver
cd $CERTIFIER_PROTOTYPE/certifier_service
go build simpleserver.go

# Create directories for app and service data
cd $GRAMINE_EXAMPLE_DIR
mkdir -p app1_data app2_data service

cd $GRAMINE_EXAMPLE_DIR/provisioning
cp ./* $GRAMINE_EXAMPLE_DIR/service
cp ./* $GRAMINE_EXAMPLE_DIR/app1_data
cp ./* $GRAMINE_EXAMPLE_DIR/app2_data

# Start the Certifier Service
cd $GRAMINE_EXAMPLE_DIR/service
$CERTIFIER_PROTOTYPE/certifier_service/simpleserver \
      --policyFile=policy.bin --readPolicy=true

# initialize client app
cd $GRAMINE_EXAMPLE_DIR
gramine-sgx gramine_example_app --print_all=true \
      --operation=cold-init --data_dir=./app1_data/ --policy_store_file=policy_store
# get client app certified
gramine-sgx gramine_example_app --print_all=true \
      --operation=get-certified --data_dir=./app1_data/ --policy_store_file=policy_store

# initialize server app
cd $GRAMINE_EXAMPLE_DIR
gramine-sgx gramine_example_app --print_all=true \
      --operation=cold-init --data_dir=./app2_data/ --policy_store_file=policy_store
# get server app certified
gramine-sgx gramine_example_app --print_all=true \
      --operation=get-certified --data_dir=./app2_data/ --policy_store_file=policy_store

# Run the apps to test trusted services
# In app as a server terminal run the following:
cd $GRAMINE_EXAMPLE_DIR
gramine-sgx gramine_example_app --print_all=true --operation=run-app-as-server --data_dir=./app2_data/ \
      --policy_store_file=policy_store

# In app as a client terminal run the following:
cd $GRAMINE_EXAMPLE_DIR
gramine-sgx gramine_example_app --print_all=true --operation=run-app-as-client --data_dir=./app1_data/ \
      --policy_store_file=policy_store
